<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ProudRabbit</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-03-08T08:05:42.758Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>路痴种花兔</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Git学习（一）</title>
    <link href="http://yoursite.com/2020/03/08/Git%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://yoursite.com/2020/03/08/Git%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2020-03-08T06:53:25.000Z</published>
    <updated>2020-03-08T08:05:42.758Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基础篇"><a href="#基础篇" class="headerlink" title="基础篇"></a>基础篇</h1><p>这已经是重写第二遍了，原因没做好Git的项目跟踪，然后VScode误操作，删了。。。。😭😭，还是typora好用，不敢用VScode了。。。。</p><h2 id="需要工具"><a href="#需要工具" class="headerlink" title="需要工具"></a>需要工具</h2><pre><code>* Git安装包：地址：https://git-scm.com/* Github网站账号 地址：https://github.com/</code></pre><hr><a id="more"></a><h2 id="一、安装Git"><a href="#一、安装Git" class="headerlink" title="一、安装Git"></a>一、安装Git</h2><p>​    百度搜索Git下载安装直接默认即可。然后进入Github注册账号。</p><p>​    Git相关知识主要分为三个区，工作区，暂存区以及Git仓库</p><h2 id="二、进行全局配置"><a href="#二、进行全局配置" class="headerlink" title="二、进行全局配置"></a>二、进行全局配置</h2><p>​    右键在空白处右键，点击”Git bash here“打开Git命令行窗口</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">config</span> --global user.name“用户名”<span class="comment">//绑定用户，使用GitHub注册的用户名。</span></span><br><span class="line"></span><br><span class="line">git <span class="built_in">config</span> --global user.email“ 邮箱” <span class="comment">//绑定邮箱，同样使用GitHub注册用的邮箱。</span></span><br></pre></td></tr></table></figure><p>注意不要输错</p><h2 id="三、创建本地仓库"><a href="#三、创建本地仓库" class="headerlink" title="三、创建本地仓库"></a>三、创建本地仓库</h2><p>==不建议在现有项目上学习Git，防止出现无法恢复的误操作。不要使用中文路径名。==</p><ol><li><p><code>mkdir study_git 文件夹名</code>    //创建文件夹（项目）</p></li><li><p><code>cd study_git</code> //进入项目目录</p></li><li><p>Git仓库初始化（让Git知道他需要管理这个项目目录 <code>git init</code> 文件夹会添加一个隐藏的文件夹，不能删除也不能随意更改其中的内容。</p></li><li><p>仓库常用操作指令</p></li><li><ol><li>查看当前状态： <code>git status</code></li><li>添加到缓存区： <code>git add 文件名</code>   //说明git      add指令可以添加一个文件，也可以添加多个文件。</li></ol></li></ol><table><thead><tr><th>语法1：</th><th>git  add 文件名</th></tr></thead><tbody><tr><td>语法2：</td><td>git  add 文件名1 文件名2 文件名3……</td></tr><tr><td>语法3：</td><td>git add .             //【添加当前目录到缓存区】</td></tr></tbody></table><ol start="6"><li>提交至版本库： <code>git commit -m “注释内容”</code></li></ol><p>后续进行修改文件操作后，重复使用<code>git add</code>和<code>git commit</code>指令即可。</p><p><img src="https://i.loli.net/2020/03/08/9VXrUPDZAwSCjYm.png" alt="clip_image001"></p><h2 id="四、版本回退"><a href="#四、版本回退" class="headerlink" title="四、版本回退"></a>四、版本回退</h2><p>版本回退分为两步进行操作</p><p>查看版本，确定需要回到的时刻点；指令：<code>git log</code>  和<code>git log --pretty = oneline</code>   //推荐使用第二个</p><ol><li><p>回退操作，指令：<code>git reset --hard 版本号</code></p></li><li><p>黄色的字符串为某一个时间点提交的序号（版本号）,（HEAD-&gt;master）表示当前所在的位置。回到过去后再想回到最新的版本，则需要指令查看历史操作，以得到最新的commit id  指令 <code>git reflog</code></p></li></ol><p><img src="https://i.loli.net/2020/03/08/jHOBoGuVXd1wyb9.png" alt="clip_image002"></p><p>==<u>小结：要想进行版本回退，需要得到commit id，然后进行回退；要想回到未来，需要使用<code>git reflog</code>进行历史查看，得到最新的commit id；版本回退时commit id可以不用写全，git自动识别，至少写四位。</u>==</p><h2 id="六、远程仓库"><a href="#六、远程仓库" class="headerlink" title="六、远程仓库"></a>六、远程仓库</h2><p>推荐使用GitHub提供的服务,后面会使用Git同步推送到Github和Gitee(国内码云)，推荐使用SSH公私钥对的方式</p><h3 id="1-基于HTTP协议"><a href="#1-基于HTTP协议" class="headerlink" title="1. 基于HTTP协议"></a>1. 基于HTTP协议</h3><p>​        1. 创建空目录，名称为GitHub上创建的仓库名。<img src="C:%5CUsers%5Casus%5CAppData%5CLocal%5CTemp%5Cmsohtmlclip1%5C01%5Cclip_image003.png" alt="clip_image003"></p><p>​        2. 使用 clone 指令克隆线上仓库到本地。指令：<code>git clone 线上仓库地址</code></p><p>​            <img src="https://i.loli.net/2020/03/08/LiUvyBMHqmIoEPf.png" alt="clip_image004"></p><p>​        3. 在仓库上做对应操作（提交暂存区、提交本地仓库、提交线上仓库、拉取线上仓库）</p><p>​        4. 提交线上仓库的指令：<code>git push</code>         //如果第一次提交显示错误403表示没有权限，需要修改“.git/config”文件内容</p><p>​            将</p><p>​            <code>[remote&quot;origin&quot;]url = https://github.com/用户名/仓库名.git</code></p><p>​            修改为</p><p>​            <code>[remote&quot;origin&quot;]url=https://用户名:密码@github.com/用户名/仓库名.git</code></p><p>​            提交成功后，可以查看线上仓库的内容，需要刷新。</p><p><img src="https://i.loli.net/2020/03/08/Ml7yrNHXZR4cWQJ.png" alt="clip_image005"></p><p>​            5 拉取线上仓库指令：<code>git pull</code></p><p>​                首先在线上创建文件</p><p><img src="https://i.loli.net/2020/03/08/2ZbHRjinu7wN9Xm.png" alt="clip_image006"></p><p><img src="https://i.loli.net/2020/03/08/nXWsqceMBmHw1tR.png" alt="clip_image007"></p><p>​                然后输入指令：<code>git pull</code></p><p><img src="https://i.loli.net/2020/03/08/nsDFpY3OHrh1SJc.png" alt="clip_image008"></p><p>==注意：每天上班前拉取线上最新版本（<code>git pull</code>），下班前推送版本（<code>git push</code>）将本地代码提交的线上仓库。==</p><h3 id="2-基于SSH协议（推荐）"><a href="#2-基于SSH协议（推荐）" class="headerlink" title="2. 基于SSH协议（推荐）"></a>2. 基于SSH协议（推荐）</h3><p>该方式与前面HTTP方式相比，只是影响GitHub对于用户的身份鉴权方式，对于git的具体操作（如提交本地，添加注释等）没有任何影响。</p><p>步骤：</p><p>​            ①生成客户端公私钥对文件（文件默认在C盘用户Admin的.ssh文件夹内）；</p><p>​            ②将公钥上传到GitHub</p><p>​    2.1 生成公私钥对指令（需先自行安装OpenSSH）：<code>ssh-keygen -t rsa -C &quot;注册邮箱&quot;</code></p><p>​    2.2 将公钥文件内容上传GitHub（id_rsa.pub）</p><p>​    2.3 验证公钥<code>ssh -T git@github.com</code> （@后网址可以修改）</p><p><img src="https://i.loli.net/2020/03/08/YJgw8u9xIWRnaL6.png" alt="clip_image009"></p><p><img src="https://i.loli.net/2020/03/08/CygzQBHtISkq5TO.png" alt="clip_image010"></p><p>​    标题可以随意填写，填写完之后保存即可。</p><p>​    2.4 执行后续git操作，操作与之前一样。</p><p>​            例如克隆线上仓库到本地</p><p>​            <code>Git clone git@github.com:ProudRabbit/STM32F4_FreeRTOS.git  //使用SSH地址</code></p><p><img src="https://i.loli.net/2020/03/08/QPmlKxUAEH5Vb6W.png" alt="lip_image011"></p><p>==<u>PS:在使用SSH或者HTTPS协议克隆线上仓库到本地后，不要修改线上仓库的地址（如使用SSH改为使用HTTPS），这样会导致本地无法访问线上仓库。</u>==</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;基础篇&quot;&gt;&lt;a href=&quot;#基础篇&quot; class=&quot;headerlink&quot; title=&quot;基础篇&quot;&gt;&lt;/a&gt;基础篇&lt;/h1&gt;&lt;p&gt;这已经是重写第二遍了，原因没做好Git的项目跟踪，然后VScode误操作，删了。。。。😭😭，还是typora好用，不敢用VScode了。。。。&lt;/p&gt;
&lt;h2 id=&quot;需要工具&quot;&gt;&lt;a href=&quot;#需要工具&quot; class=&quot;headerlink&quot; title=&quot;需要工具&quot;&gt;&lt;/a&gt;需要工具&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;* Git安装包：地址：https://git-scm.com/
* Github网站账号 地址：https://github.com/&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
    
    </summary>
    
    
    
      <category term="学习笔记" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Git" scheme="http://yoursite.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>我的第一篇博客</title>
    <link href="http://yoursite.com/2020/03/07/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2020/03/07/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</id>
    <published>2020-03-07T05:24:19.000Z</published>
    <updated>2020-03-07T06:15:37.667Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://imgchr.com/i/3XKtlF" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2020/03/07/3XKtlF.jpg" alt="3XKtlF.jpg"></a></p><a id="more"></a><h1 id="我的第一篇博客"><a href="#我的第一篇博客" class="headerlink" title="我的第一篇博客"></a>我的第一篇博客</h1><p>​    经过两天的折腾，终于把个人博客在Github和Gitee上搭建成功了，现在超开心的说o(<em>￣▽￣</em>)ブ。</p><hr><h2 id="写这篇博客的目的"><a href="#写这篇博客的目的" class="headerlink" title="写这篇博客的目的"></a>写这篇博客的目的</h2><p>​    因为我有写笔记的习惯，以前笔记都是在OneNote上写的，现在逐渐从Windows下转移到Linux，但是Linux下没有OneNote，以及OneNote同步太慢，遂萌生了搭建个人博客的想法。后面我会把自己搭建博客的经验分享出来。</p><hr><p>感谢yilia-puls主题的博主给予的帮助。</p><p><strong>仅以此博客记录我第一次搭建个人博客。</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://imgchr.com/i/3XKtlF&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;img src=&quot;https://s2.ax1x.com/2020/03/07/3XKtlF.jpg&quot; alt=&quot;3XKtlF.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="随笔" scheme="http://yoursite.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
